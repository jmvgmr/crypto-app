{"version":3,"sources":["images/logo.png","components/Navbar.jsx","services/cryptoApi.js","components/Loader.jsx","components/Cryptocurrencies.jsx","components/LineChart.jsx","components/CryptoDetails.jsx","components/Homepage.jsx","services/cryptoNewsApi.js","components/News.jsx","components/Exchanges.jsx","App.js","app/store.js","index.js"],"names":["Navbar","useState","activeMenu","setactiveMenu","screenSize","setscreenSize","useEffect","handleResize","window","innerWidth","addEventListener","removeEventListener","className","src","icon","size","Title","level","to","process","onClick","MenuOutlined","theme","Item","HomeOutlined","FundOutlined","MoneyCollectOutlined","BulbOutlined","cryptoApiHeaders","console","log","createRequest","url","headers","cryptoApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getCryptos","query","count","getCryptoDetails","coinId","getCryptoHistory","timePeriod","getCryptoExchanges","useGetCryptosQuery","useGetCryptoDetailsQuery","useGetCryptoHistoryQuery","useGetCryptoExchangesQuery","Loader","Cryptocurrencies","simplified","cryptosList","data","isFetching","cryptos","setCryptos","searchTerm","setSearchTerm","filteredData","coins","filter","coin","name","toLowerCase","includes","placeholder","onChange","e","target","value","gutter","map","currency","xs","sm","lg","id","title","rank","extra","iconUrl","alt","hoverable","millify","price","marketCap","change","LineChart","coinHistory","currentPrice","coinName","coinPrice","coinTimestamp","i","history","length","push","Date","timestamp","toLocaleDateString","labels","datasets","label","fill","backgroundColor","borderColor","options","scales","yAxis","ticks","beginAtZero","radius","borderWidth","CryptoDetails","useParams","setTimePeriod","cryptoDetails","stats","DollarCircleOutlined","NumberOutlined","volume","ThunderboltOutlined","allTimeHigh","TrophyOutlined","genericStats","numberOfMarkets","numberOfExchanges","approvedSupply","CheckOutlined","StopOutlined","ExclamationCircleOutlined","totalSupply","circulatingSupply","slug","defaultValue","date","HTMLReactParser","description","links","link","type","href","rel","Homepage","globalStats","span","total","totalExchanges","totalMarketCap","total24hVolume","totalMarkets","cryptoNewsHeaders","cryptoNewsApi","getCryptoNews","newsCategory","useGetCryptoNewsQuery","demoImage","News","setnewsCategory","cryptoNews","showSearch","optionFilterProp","filterOption","input","option","children","indexOf","news","index","style","maxWidth","maxHeight","image","thumbnail","contentUrl","substring","provider","moment","datePublished","startOf","fromNow","Exchanges","exchangesList","exchanges","exchange","showArrow","header","marketShare","App","exact","path","color","textAlign","configureStore","reducer","ReactDOM","render","StrictMode","basename","store","document","getElementById"],"mappings":"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","file":"static/js/main.6fac9ea7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.58644156.png\";","import {Avatar, Button, Menu, Typography} from \"antd\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nimport icon from '../images/logo.png'\r\nimport {BulbOutlined, FundOutlined, HomeOutlined, MenuOutlined, MoneyCollectOutlined} from \"@ant-design/icons\";\r\nimport {useEffect, useState} from \"react\";\r\n\r\nfunction Navbar() {\r\n    const [activeMenu, setactiveMenu] = useState(true);\r\n    const [screenSize, setscreenSize] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const handleResize = () => setscreenSize(window.innerWidth);\r\n\r\n        window.addEventListener('resize', handleResize);\r\n\r\n        handleResize();\r\n\r\n        return () => window.removeEventListener('resize', handleResize);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (screenSize < 768) {\r\n            setactiveMenu(false);\r\n        } else {\r\n            setactiveMenu(true);\r\n        }\r\n    }, [screenSize])\r\n\r\n    return (\r\n        <div className=\"nav-container\">\r\n            <div className=\"logo-container\">\r\n                <Avatar src={icon} size={64}/>\r\n                <Typography.Title level={2} className=\"logo\">\r\n                    <Link to=\"/\">\r\n                        {process.env.REACT_APP_NAME}\r\n                    </Link>\r\n                </Typography.Title>\r\n                <Button className=\"menu-control-container\" onClick={() => setactiveMenu(!activeMenu)}>\r\n                    <MenuOutlined/>\r\n                </Button>\r\n            </div>\r\n            {activeMenu && (\r\n                <Menu theme=\"dark\">\r\n                    <Menu.Item icon={<HomeOutlined/>}>\r\n                        <Link to=\"/\">Home</Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item icon={<FundOutlined/>}>\r\n                        <Link to=\"/cryptocurrencies\">Cryptocurrencies</Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item icon={<MoneyCollectOutlined/>}>\r\n                        <Link to=\"/exchanges\">Exchanges</Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item icon={<BulbOutlined/>}>\r\n                        <Link to=\"/news\">News</Link>\r\n                    </Menu.Item>\r\n                </Menu>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Navbar","import {createApi, fetchBaseQuery} from \"@reduxjs/toolkit/query/react\";\r\n\r\nconst cryptoApiHeaders = {\r\n    'x-rapidapi-host': process.env.REACT_APP_CRYPTO_API_HOST,\r\n    'x-rapidapi-key': process.env.REACT_APP_RAPIDAPI_KEY\r\n};\r\n\r\nconsole.log(process.env.REACT_APP_CRYPTO_API_HOST, process.env.REACT_APP_RAPIDAPI_KEY)\r\n\r\nconst baseUrl = process.env.REACT_APP_CRYPTO_API_URL;\r\n\r\nconst createRequest = (url) => ({url, headers: cryptoApiHeaders});\r\n\r\nexport const cryptoApi = createApi({\r\n    reducerPath: 'cryptoApi',\r\n    baseQuery: fetchBaseQuery({baseUrl}),\r\n    endpoints: (builder) => ({\r\n        getCryptos: builder.query({\r\n            query: (count) => createRequest(`/coins?limit=${count}`),\r\n        }),\r\n        getCryptoDetails: builder.query({\r\n            query: (coinId) => createRequest(`/coin/${coinId}`),\r\n        }),\r\n        getCryptoHistory: builder.query({\r\n            query: ({coinId, timePeriod}) => createRequest(`/coin/${coinId}/history/${timePeriod}`),\r\n        }),\r\n        getCryptoExchanges: builder.query({\r\n            query: () => createRequest('/exchanges'),\r\n        }),\r\n    })\r\n});\r\n\r\nexport const {\r\n    useGetCryptosQuery,\r\n    useGetCryptoDetailsQuery,\r\n    useGetCryptoHistoryQuery,\r\n    useGetCryptoExchangesQuery\r\n} = cryptoApi;\r\n","import {Spin} from \"antd\";\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <div className=\"loader\">\r\n            <Spin/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loader;","import {useGetCryptosQuery} from \"../services/cryptoApi\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {Card, Col, Input, Row} from \"antd\";\r\nimport {Link} from \"react-router-dom\";\r\nimport millify from \"millify\";\r\nimport Loader from \"./Loader\";\r\n\r\nconst Cryptocurrencies = ({simplified}) => {\r\n\r\n    const count = simplified ? 10 : 100;\r\n\r\n    const {data: cryptosList, isFetching} = useGetCryptosQuery(count);\r\n    const [cryptos, setCryptos] = useState([]);\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n\r\n    useEffect(() => {\r\n        const filteredData = cryptosList?.data?.coins?.filter((coin) => coin.name.toLowerCase().includes(searchTerm.toLowerCase()))\r\n        setCryptos(filteredData)\r\n    }, [cryptosList, searchTerm]);\r\n\r\n    if (isFetching) return <Loader/>;\r\n\r\n    return (\r\n        <>\r\n            {!simplified && (\r\n                <div className=\"search-crypto\">\r\n                    <Input placeholder=\"Search Cryptocurrency\" onChange={(e) => setSearchTerm(e.target.value)}/>\r\n                </div>\r\n            )}\r\n            <Row gutter={[32, 32]} className=\"crypto-card-container\">\r\n                {cryptos?.map((currency) => (\r\n                    <Col xs={24} sm={12} lg={6} className=\"crypto-card\" key={currency.id}>\r\n                        <Link to={`/crypto/${currency.id}`}>\r\n                            <Card\r\n                                title={`${currency.rank}. ${currency.name}`}\r\n                                extra={<img className=\"crypto-image\" src={currency.iconUrl} alt=''/>}\r\n                                hoverable\r\n                            >\r\n                                <p>Price: {millify(currency.price)}</p>\r\n                                <p>Market Cap: {millify(currency.marketCap)}</p>\r\n                                <p>Daily Change: {millify(currency.change)}%</p>\r\n                            </Card>\r\n                        </Link>\r\n                    </Col>\r\n                ))}\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Cryptocurrencies","import {Col, Row} from \"antd\";\r\nimport Title from \"antd/lib/typography/Title\";\r\nimport {Line} from \"react-chartjs-2\";\r\n\r\nconst LineChart = ({coinHistory, currentPrice, coinName}) => {\r\n    const coinPrice = [];\r\n    const coinTimestamp = [];\r\n\r\n    for (let i = 0; i < coinHistory?.data?.history?.length; i++) {\r\n        coinPrice.push(coinHistory.data.history[i].price)\r\n        coinTimestamp.push(new Date(coinHistory.data.history[i].timestamp).toLocaleDateString());\r\n    }\r\n\r\n    const data = {\r\n        labels: coinTimestamp,\r\n        datasets: [\r\n            {\r\n                label: 'Price in USD',\r\n                data: coinPrice,\r\n                fill: false,\r\n                backgroundColor: '#0097ff',\r\n                borderColor: '#0099ff',\r\n            },\r\n        ],\r\n    };\r\n\r\n    const options = {\r\n        scales: {\r\n            yAxis: [\r\n                {\r\n                    ticks: {\r\n                        beginAtZero: true,\r\n                    },\r\n                },\r\n            ],\r\n        },\r\n        radius: 0,\r\n        borderWidth: 0.75\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Row className=\"chart-header\">\r\n                <Title level={2} className=\"chart-title\">{coinName} Price Chart </Title>\r\n                <Col className=\"price-container\">\r\n                    <Title className=\"price-change\" level={5}>Change: {coinHistory?.data?.change}%</Title>\r\n                    <Title className=\"current-price\" level={5}>Current {coinName} Price: $ {currentPrice}</Title>\r\n                </Col>\r\n            </Row>\r\n            <Line data={data} options={options}/>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default LineChart;","import {useParams} from \"react-router-dom\";\r\nimport {useState} from \"react\";\r\nimport {useGetCryptoDetailsQuery, useGetCryptoHistoryQuery} from \"../services/cryptoApi\";\r\nimport millify from \"millify\";\r\nimport {\r\n    CheckOutlined,\r\n    DollarCircleOutlined, ExclamationCircleOutlined, FundOutlined,\r\n    MoneyCollectOutlined,\r\n    NumberOutlined, StopOutlined,\r\n    ThunderboltOutlined,\r\n    TrophyOutlined\r\n} from \"@ant-design/icons\";\r\nimport {Col, Row, Select} from \"antd\";\r\nimport Title from \"antd/lib/typography/Title\";\r\nimport {Option} from \"antd/lib/mentions\";\r\nimport Text from \"antd/lib/typography/Text\";\r\nimport HTMLReactParser from \"html-react-parser\";\r\nimport LineChart from \"./LineChart\";\r\nimport Loader from \"./Loader\";\r\n\r\n\r\nconst CryptoDetails = () => {\r\n    const {coinId} = useParams();\r\n    const [timePeriod, setTimePeriod] = useState('7d');\r\n    const {data, isFetching} = useGetCryptoDetailsQuery(coinId);\r\n    const {data: coinHistory} = useGetCryptoHistoryQuery({coinId, timePeriod});\r\n    const cryptoDetails = data?.data?.coin;\r\n\r\n    if (isFetching) return <Loader/>;\r\n\r\n    const time = ['24h', '7d', '30d', '1y', '3m', '3y', '5y'];\r\n\r\n    const stats = [\r\n        {\r\n            title: 'Price to USD',\r\n            value: `$ ${cryptoDetails.price && millify(cryptoDetails.price)}`,\r\n            icon: <DollarCircleOutlined/>\r\n        },\r\n        {title: 'Rank', value: cryptoDetails.rank, icon: <NumberOutlined/>},\r\n        {\r\n            title: '24h Volume',\r\n            value: `$ ${cryptoDetails.volume && millify(cryptoDetails.volume)}`,\r\n            icon: <ThunderboltOutlined/>\r\n        },\r\n        {\r\n            title: 'Market Cap',\r\n            value: `$ ${cryptoDetails.marketCap && millify(cryptoDetails.marketCap)}`,\r\n            icon: <DollarCircleOutlined/>\r\n        },\r\n        {\r\n            title: 'All-time-high(daily avg.)',\r\n            value: `$ ${millify(cryptoDetails.allTimeHigh.price)}`,\r\n            icon: <TrophyOutlined/>\r\n        },\r\n    ];\r\n\r\n    const genericStats = [\r\n        {title: 'Number Of Markets', value: cryptoDetails.numberOfMarkets, icon: <FundOutlined/>},\r\n        {title: 'Number Of Exchanges', value: cryptoDetails.numberOfExchanges, icon: <MoneyCollectOutlined/>},\r\n        {\r\n            title: 'Aprroved Supply',\r\n            value: cryptoDetails.approvedSupply ? <CheckOutlined/> : <StopOutlined/>,\r\n            icon: <ExclamationCircleOutlined/>\r\n        },\r\n        {title: 'Total Supply', value: `$ ${millify(cryptoDetails.totalSupply)}`, icon: <ExclamationCircleOutlined/>},\r\n        {\r\n            title: 'Circulating Supply',\r\n            value: `$ ${millify(cryptoDetails.circulatingSupply)}`,\r\n            icon: <ExclamationCircleOutlined/>\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <Col className=\"coin-detail-container\">\r\n            <Col className=\"coin-heading-container\">\r\n                <Title level={2} className=\"coin-name\">\r\n                    {cryptoDetails.name} ({cryptoDetails.slug}) Price\r\n                </Title>\r\n                <p>\r\n                    {cryptoDetails.name} live price in USD.\r\n                    View value statistics, market cap and supply.\r\n                </p>\r\n                <Select\r\n                    defaultValue='7d'\r\n                    className=\"select-timeperiod\"\r\n                    placeholder=\"Select Time Period\"\r\n                    onChange={(value) => setTimePeriod(value)}\r\n                >\r\n                    {time.map((date) => <Option key={date}>{date}</Option>)}\r\n                </Select>\r\n                <LineChart coinHistory={coinHistory} currentPrice={millify(cryptoDetails.price)}\r\n                           coinName={cryptoDetails.name}/>\r\n                <Col className=\"stats-container\">\r\n                    <Col className=\"coin-value-statistics\">\r\n                        <Col className=\"coin-value-statistics-heading\">\r\n                            <Title className=\"coin-details-heading\">\r\n                                {cryptoDetails.name} Value Statistics\r\n                            </Title>\r\n                            <p>\r\n                                An overview showing the stats of {cryptoDetails.name}\r\n                            </p>\r\n                        </Col>\r\n                        {stats.map(({icon, title, value}) => (\r\n                            <Col className=\"coin-stats\">\r\n                                <Col className=\"coin-stats-name\">\r\n                                    <Text>{icon}</Text>\r\n                                    <Text>{title}</Text>\r\n                                </Col>\r\n                                <Text className=\"stats\">{value}</Text>\r\n                            </Col>\r\n                        ))}\r\n                    </Col>\r\n                    <Col className=\"other-stats-info\">\r\n                        <Col className=\"coin-value-statistics-heading\">\r\n                            <Title className=\"coin-details-heading\">\r\n                                Other Statistics\r\n                            </Title>\r\n                            <p>\r\n                                An overview showing the stats of all cryptocurrencies\r\n                            </p>\r\n                        </Col>\r\n                        {genericStats.map(({icon, title, value}) => (\r\n                            <Col className=\"coin-stats\">\r\n                                <Col className=\"coin-stats-name\">\r\n                                    <Text>{icon}</Text>\r\n                                    <Text>{title}</Text>\r\n                                </Col>\r\n                                <Text className=\"stats\">{value}</Text>\r\n                            </Col>\r\n                        ))}\r\n                    </Col>\r\n                </Col>\r\n            </Col>\r\n            <Col className=\"coin-desc-link\">\r\n                <Row className=\"coin-desc\">\r\n                    <Title level={3} className=\"coin-details-heading\">\r\n                        What is {cryptoDetails.name}\r\n                        {HTMLReactParser(cryptoDetails.description)}\r\n                    </Title>\r\n                </Row>\r\n                <Col className=\"coin-links\">\r\n                    <Title level={3} className=\"coin-details-heading\">\r\n                        {cryptoDetails.name} Links\r\n                    </Title>\r\n                    {cryptoDetails.links.map((link) => (\r\n                        <Row className=\"coin-link\" key={link.name}>\r\n                            <Title level={5} className=\"link-name\">\r\n                                {link.type}\r\n                            </Title>\r\n                            <a href={link.url} target=\"_blank\" rel=\"noreferrer\">\r\n                                {link.name}\r\n                            </a>\r\n                        </Row>\r\n                    ))}\r\n                </Col>\r\n            </Col>\r\n        </Col>\r\n    )\r\n}\r\n\r\nexport default CryptoDetails;","import Title from \"antd/lib/typography/Title\";\r\nimport {Col, Row, Statistic} from \"antd\";\r\nimport {useGetCryptosQuery} from \"../services/cryptoApi\";\r\nimport millify from \"millify\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {Cryptocurrencies, News} from \"./index\";\r\nimport Loader from \"./Loader\";\r\n\r\nfunction Homepage() {\r\n\r\n    const {data, isFetching} = useGetCryptosQuery(10);\r\n    const globalStats = data?.data?.stats;\r\n\r\n    if (isFetching) return <Loader/>\r\n\r\n    return (\r\n        <>\r\n            <Title level={2} className=\"heading\">Global Crypto Stats</Title>\r\n            <Row gutter={[32, 32]}>\r\n                <Col span={12}><Statistic title=\"Total Cryptocurrencies\" value={globalStats.total}/></Col>\r\n                <Col span={12}><Statistic title=\"Total Exchanges\" value={millify(globalStats.totalExchanges)}/></Col>\r\n                <Col span={12}><Statistic title=\"Total Market Cap\" value={millify(globalStats.totalMarketCap)}/></Col>\r\n                <Col span={12}><Statistic title=\"Total 24h Volume\" value={millify(globalStats.total24hVolume)}/></Col>\r\n                <Col span={12}><Statistic title=\"Total Market\" value={millify(globalStats.totalMarkets)}/></Col>\r\n            </Row>\r\n            <div className=\"home-heading-container\">\r\n                <Title level={2} className=\"home-title\">Top 10 Cryptocurrencies</Title>\r\n                <Title level={3} className=\"show-more\"><Link to=\"/cryptocurrencies\">Show More</Link></Title>\r\n            </div>\r\n            <Cryptocurrencies simplified/>\r\n            <div className=\"home-heading-container\">\r\n                <Title level={2} className=\"home-title\">Latest Crypto News</Title>\r\n                <Title level={3} className=\"show-more\"><Link to=\"/news\">Show More</Link></Title>\r\n            </div>\r\n            <News simplified/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Homepage;","import {createApi, fetchBaseQuery} from \"@reduxjs/toolkit/query/react\";\r\n\r\nconst cryptoNewsHeaders = {\r\n    'x-bingapis-sdk': 'true',\r\n    'x-rapidapi-host': process.env.REACT_APP_NEWS_API_HOST,\r\n    'x-rapidapi-key': process.env.REACT_APP_RAPIDAPI_KEY\r\n}\r\n\r\nconst baseUrl = process.env.REACT_APP_NEWS_API_URL;\r\n\r\nconst createRequest = (url) => ({url, headers: cryptoNewsHeaders});\r\n\r\nexport const cryptoNewsApi = createApi({\r\n    reducerPath: 'cryptoNewsApi',\r\n    baseQuery: fetchBaseQuery({baseUrl}),\r\n    endpoints: (builder) => ({\r\n        getCryptoNews: builder.query({\r\n            query: ({\r\n                        newsCategory,\r\n                        count\r\n                    }) => createRequest(`/news/search?q=${newsCategory}&safeSearch=Off&textFormat=Raw&freshness=Day&count=${count}`)\r\n        }),\r\n    }),\r\n});\r\n\r\nexport const {useGetCryptoNewsQuery} = cryptoNewsApi;","import {useGetCryptoNewsQuery} from \"../services/cryptoNewsApi\";\r\nimport {Avatar, Card, Col, Row, Select} from \"antd\";\r\nimport Title from \"antd/lib/typography/Title\";\r\nimport Text from \"antd/lib/typography/Text\";\r\nimport moment from \"moment\";\r\nimport {useState} from \"react\";\r\nimport {Option} from \"antd/lib/mentions\";\r\nimport {useGetCryptosQuery} from \"../services/cryptoApi\";\r\nimport Loader from \"./Loader\";\r\n\r\nconst demoImage = 'https://u.today/sites/default/files/2019-12/Cryptocurrency%20News.jpg'\r\n\r\nconst News = ({simplified}) => {\r\n    const [newsCategory, setnewsCategory] = useState('Cryptocurrency')\r\n    const {data: cryptoNews} = useGetCryptoNewsQuery({newsCategory, count: simplified ? 6 : 12})\r\n    const {data} = useGetCryptosQuery(100);\r\n\r\n    if (!cryptoNews?.value) return <Loader/>;\r\n\r\n    return (\r\n        <Row gutter={[24, 24]}>\r\n            {!simplified && (\r\n                <Col span={24}>\r\n                    <Select\r\n                        showSearch\r\n                        className=\"select-news\"\r\n                        placeholder=\"Select a currency\"\r\n                        optionFilterProp=\"children\"\r\n                        onChange={(value) => setnewsCategory(value)}\r\n                        filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                    >\r\n                        <Option value=\"Cryptocurrency\">Cryptocurrency</Option>\r\n                        {data?.data?.coins.map((coin) => <Option value={coin.name}>{coin.name}</Option>)}\r\n                    </Select>\r\n                </Col>\r\n            )}\r\n            {cryptoNews.value.map((news, index) => (\r\n                <Col xs={24} sm={12} lg={8} key={index}>\r\n                    <Card hoverable className=\"news-card\">\r\n                        <a href={news.url} target=\"_blank\" rel=\"noreferrer\">\r\n                            <div className=\"news-image-container\">\r\n                                <Title className=\"news-title\" level={4}>{news.name}</Title>\r\n                                <img style={{maxWidth: '200px', maxHeight: '100px'}}\r\n                                     src={news?.image?.thumbnail?.contentUrl || demoImage} alt=\"news\"/>\r\n                            </div>\r\n                            <p>\r\n                                {news.description > 100\r\n                                    ? `${news.description.substring(0, 100)}...`\r\n                                    : news.description\r\n                                }\r\n                            </p>\r\n                            <div className=\"provider-container\">\r\n                                <div>\r\n                                    <Avatar src={news.provider[0]?.image?.thumbnail?.contentUrl || demoImage}\r\n                                            alt=\"news\"/>\r\n                                    <Text className=\"provider-name\">{news.provider[0]?.name}</Text>\r\n                                </div>\r\n                                <Text>{moment(news.datePublished).startOf('ss').fromNow()}</Text>\r\n                            </div>\r\n                        </a>\r\n                    </Card>\r\n                </Col>\r\n            ))}\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default News","import {useGetCryptoExchangesQuery} from \"../services/cryptoApi\";\r\nimport {Avatar, Col, Collapse, Row} from \"antd\";\r\nimport CollapsePanel from \"antd/lib/collapse/CollapsePanel\";\r\nimport Text from \"antd/lib/typography/Text\";\r\nimport millify from \"millify\";\r\nimport HTMLReactParser from \"html-react-parser\";\r\nimport Loader from \"./Loader\";\r\n\r\nconst Exchanges = () => {\r\n    const {data, isFetching} = useGetCryptoExchangesQuery();\r\n    const exchangesList = data?.data?.exchanges;\r\n\r\n    if (isFetching) return <Loader/>;\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col span={6}>Exchanges</Col>\r\n                <Col span={6}>24h Trade Volume</Col>\r\n                <Col span={6}>Markets</Col>\r\n                <Col span={6}>Change</Col>\r\n            </Row>\r\n            <Row>\r\n                {exchangesList.map((exchange) => (\r\n                    <Col span={24}>\r\n                        <Collapse>\r\n                            <CollapsePanel\r\n                                key={exchange.id}\r\n                                showArrow={false}\r\n                                header={(\r\n                                    <Row key={exchange.id}>\r\n                                        <Col span={6}>\r\n                                            <Text><strong>{exchange.rank}</strong></Text>\r\n                                            <Avatar className=\"exchange-image\" src={exchange.iconUrl}/>\r\n                                            <Text><strong>{exchange.name}</strong></Text>\r\n                                        </Col>\r\n                                        <Col span={6}>${millify(exchange.volume)}</Col>\r\n                                        <Col span={6}>${millify(exchange.numberOfMarkets)}</Col>\r\n                                        <Col span={6}>${millify(exchange.marketShare)}</Col>\r\n                                    </Row>\r\n                                )}\r\n                            >\r\n                                {HTMLReactParser(exchange.description || '')}\r\n                            </CollapsePanel>\r\n                        </Collapse>\r\n                    </Col>\r\n                ))}\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Exchanges;","import './App.css';\nimport {Cryptocurrencies, CryptoDetails, Exchanges, Homepage, Navbar, News} from \"./components\";\nimport {Layout, Space, Typography} from \"antd\";\nimport {Link, Route, Switch} from \"react-router-dom\";\n\nfunction App() {\n    return (\n        <div className=\"app\">\n            <div className=\"navbar\">\n                <Navbar/>\n            </div>\n            <div className=\"main\">\n                <Layout>\n                    <div className=\"routes\">\n                        <Switch>\n                            <Route exact path=\"/\">\n                                <Homepage/>\n                            </Route>\n                            <Route exact path=\"/exchanges\">\n                                <Exchanges/>\n                            </Route>\n                            <Route exact path=\"/cryptocurrencies\">\n                                <Cryptocurrencies/>\n                            </Route>\n                            <Route exact path=\"/crypto/:coinId\">\n                                <CryptoDetails/>\n                            </Route>\n                            <Route exact path=\"/news\">\n                                <News/>\n                            </Route>\n                        </Switch>\n                    </div>\n                </Layout>\n                <div className=\"footer\">\n                    <Typography.Title level={5} style={{color: 'white', textAlign: 'center'}}>\n                        Crypto App <br/>\n                        All rights reserved\n                    </Typography.Title>\n                    <Space>\n                        <Link to=\"/\">Home</Link>\n                        <Link to=\"/exchanges\">Exchanges</Link>\n                        <Link to=\"/news\">News</Link>\n                    </Space>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import {configureStore} from \"@reduxjs/toolkit\";\r\nimport {cryptoApi} from \"../services/cryptoApi\";\r\nimport {cryptoNewsApi} from \"../services/cryptoNewsApi\";\r\n\r\nexport default configureStore({\r\n    reducer: {\r\n        [cryptoApi.reducerPath]: cryptoApi.reducer,\r\n        [cryptoNewsApi.reducerPath]: cryptoNewsApi.reducer,\r\n    },\r\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport App from './App';\nimport {BrowserRouter as Router} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport store from \"./app/store\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Router basename='/'>\n            <Provider store={store}>\n                <App/>\n            </Provider>\n        </Router>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}